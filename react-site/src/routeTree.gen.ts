/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TechniquesIndexRouteImport } from './routes/techniques/index'
import { Route as SyllabusIndexRouteImport } from './routes/syllabus/index'
import { Route as BeltsIndexRouteImport } from './routes/belts/index'
import { Route as BeltsBeltIdRouteImport } from './routes/belts/$beltId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TechniquesIndexRoute = TechniquesIndexRouteImport.update({
  id: '/techniques/',
  path: '/techniques/',
  getParentRoute: () => rootRouteImport,
} as any)
const SyllabusIndexRoute = SyllabusIndexRouteImport.update({
  id: '/syllabus/',
  path: '/syllabus/',
  getParentRoute: () => rootRouteImport,
} as any)
const BeltsIndexRoute = BeltsIndexRouteImport.update({
  id: '/belts/',
  path: '/belts/',
  getParentRoute: () => rootRouteImport,
} as any)
const BeltsBeltIdRoute = BeltsBeltIdRouteImport.update({
  id: '/belts/$beltId',
  path: '/belts/$beltId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/belts/$beltId': typeof BeltsBeltIdRoute
  '/belts': typeof BeltsIndexRoute
  '/syllabus': typeof SyllabusIndexRoute
  '/techniques': typeof TechniquesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/belts/$beltId': typeof BeltsBeltIdRoute
  '/belts': typeof BeltsIndexRoute
  '/syllabus': typeof SyllabusIndexRoute
  '/techniques': typeof TechniquesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/belts/$beltId': typeof BeltsBeltIdRoute
  '/belts/': typeof BeltsIndexRoute
  '/syllabus/': typeof SyllabusIndexRoute
  '/techniques/': typeof TechniquesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/belts/$beltId' | '/belts' | '/syllabus' | '/techniques'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/belts/$beltId' | '/belts' | '/syllabus' | '/techniques'
  id:
    | '__root__'
    | '/'
    | '/belts/$beltId'
    | '/belts/'
    | '/syllabus/'
    | '/techniques/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BeltsBeltIdRoute: typeof BeltsBeltIdRoute
  BeltsIndexRoute: typeof BeltsIndexRoute
  SyllabusIndexRoute: typeof SyllabusIndexRoute
  TechniquesIndexRoute: typeof TechniquesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/techniques/': {
      id: '/techniques/'
      path: '/techniques'
      fullPath: '/techniques'
      preLoaderRoute: typeof TechniquesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/syllabus/': {
      id: '/syllabus/'
      path: '/syllabus'
      fullPath: '/syllabus'
      preLoaderRoute: typeof SyllabusIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/belts/': {
      id: '/belts/'
      path: '/belts'
      fullPath: '/belts'
      preLoaderRoute: typeof BeltsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/belts/$beltId': {
      id: '/belts/$beltId'
      path: '/belts/$beltId'
      fullPath: '/belts/$beltId'
      preLoaderRoute: typeof BeltsBeltIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BeltsBeltIdRoute: BeltsBeltIdRoute,
  BeltsIndexRoute: BeltsIndexRoute,
  SyllabusIndexRoute: SyllabusIndexRoute,
  TechniquesIndexRoute: TechniquesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
